# STRONG HTACCESS PROTECTION
<Files ~ "^.*\.([Hh][Tt][Aa][Cc])">
order allow,deny
deny from all
satisfy all
</Files>

#ErrorDocument 404 /index.html
<IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteBase /
  RewriteRule ^index\.html$ - [L]
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteRule . /index.html [L]
</IfModule>

<IfModule mod_mime.c>
    AddType application/wasm .wasm
    AddType application/octet-stream .dll
    AddType application/json .json
</IfModule>

<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/json
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE application/octet-stream
    AddOutputFilterByType DEFLATE application/wasm
    <IfModule mod_setenvif.c>
        BrowserMatch ^Mozilla/4 gzip-only-text/html
        BrowserMatch ^Mozilla/4.0[678] no-gzip
        BrowserMatch bMSIE !no-gzip !gzip-only-text/html
    </IfModule>
</IfModule>

<IfModule mod_autoindex.c>
    Options -Indexes
    AllowOverride None
</IfModule>

# Rules to correctly serve gzip compressed CSS and JS files.
# Requires both mod_rewrite and mod_headers to be enabled.
<IfModule mod_headers.c>
  # Serve brotli compressed CSS files if they exist and the client accepts gzip.
  RewriteCond %{HTTP:Accept-encoding} br
  RewriteCond %{REQUEST_FILENAME}\.br -s
  RewriteRule ^(.*)\.dll $1\.dll\.br [QSA]

  # Serve gzip compressed CSS files if they exist and the client accepts gzip.
  RewriteCond %{HTTP:Accept-encoding} gzip
  RewriteCond %{REQUEST_FILENAME}\.gz -s
  RewriteRule ^(.*)\.dll $1\.dll\.gz [QSA]
  
  # Serve brotli compressed JS files if they exist and the client accepts gzip.
  RewriteCond %{HTTP:Accept-encoding} br
  RewriteCond %{REQUEST_FILENAME}\.br -s
  RewriteRule ^(.*)\.wasm $1\.wasm\.br [QSA]

  # Serve gzip compressed JS files if they exist and the client accepts gzip.
  RewriteCond %{HTTP:Accept-encoding} gzip
  RewriteCond %{REQUEST_FILENAME}\.gz -s
  RewriteRule ^(.*)\.wasm $1\.wasm\.gz [QSA]
  
# Serve brotli compressed JSON files if they exist and the client accepts gzip.
RewriteCond %{HTTP:Accept-encoding} br
RewriteCond %{REQUEST_FILENAME}\.br -s
RewriteRule ^(.*)\.json $1\.json\.br [QSA]

RewriteCond %{HTTP:Accept-encoding} br
RewriteCond %{REQUEST_FILENAME}\.br -s
RewriteRule ^(.*)\.css $1\.css\.br [QSA]

  # Serve correct content types, and prevent mod_deflate double gzip.
  RewriteRule \.dll\.gz$ - [T=application/octet-stream,E=no-gzip:1]
  RewriteRule \.dll\.br$ - [T=application/octet-stream,E=no-gzip:1]
  RewriteRule \.wasm\.gz$ - [T=application/wasm,E=no-gzip:1]
  RewriteRule \.wasm\.br$ - [T=application/wasm,E=no-gzip:1]
RewriteRule \.json\.br$ - [T=application/json,E=no-gzip:1]

RewriteRule \.css\.br$ - [T=text/css,E=no-gzip:1]

  <FilesMatch "(\.dll\.gz|\.wasm\.gz)$">
    # Serve correct encoding type.
    Header set Content-Encoding gzip
    # Force proxies to cache gzipped & non-gzipped css/js files separately.
    Header append Vary Accept-Encoding
  </FilesMatch>
  <FilesMatch "(\.dll\.br|\.wasm\.br|\.json\.br|\.css\.br)$">
    # Serve correct encoding type.
    Header set Content-Encoding br
    # Force proxies to cache gzipped & non-gzipped css/js files separately.
    Header append Vary Accept-Encoding
  </FilesMatch>
</IfModule>

# https://gist.github.com/danferth/383f02ed8b74fc60d859f26f45095634